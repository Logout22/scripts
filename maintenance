#! /bin/bash

function LOG() {
    echo $@ > $F_LOG
}

function load_state() {
    if [ ! -f $F_STATE ]; then
        return 0
    else
        return `cat $F_STATE`
    fi
}

function perform_step() {
    STEP=$1
    TEXT=$2
    CMD=$3
    if [ $STATE -lt $STEP ]; then
        # ask before each step using zenity
        zenity --question --title "Step $STEP" --text "$TEXT" || \
            return $?
        # open xterms separately
        xterm -hold -e "/bin/bash" -c "$CMD"
        zenity --question --title "Step $STEP complete" --text "Success?" || \
            return $?
        # save last executed step
        STATE=$STEP
    fi
}

function start_maintenance() {
    if ! (which zenity && which xterm)>/dev/null; then
        LOG Please install zenity and xterm
        exit 2
    fi

    perform_step 1 "Perform Raspberry backup" \
        "cd $HOME/raspberry && \
        ssh -p $PORT john@$ADDRESS 'sudo ./backup.sh' | \
        ./backup-raspberry.sh" || \
        return $?
    perform_step 2 "Perform Raspberry full system upgrade" \
        "ssh -p $PORT -t john@$ADDRESS './upall'" || \
        return $?
    perform_step 3 "Perform full system upgrade" \
        "$HOME/bin/upall" || \
        return $?
}

F_LASTRUN=$HOME/last_maintenance_run
F_STATE=$HOME/last_maintenance_state
F_LOG=$HOME/last_maintenance_log
CURTIME=`date "+%s"`
# 3 days
INTERVAL=259200
# only reqd for raspberry-related cmds including $PORT or $ADDRESS
source `dirname $0`/checkraspi > $F_LOG 2>&1

load_state
STATE=$?
NUMBER_OF_STEPS=3
# maintenance run complete?
if [ $STATE -eq $NUMBER_OF_STEPS ]; then
    # when?
    if [ -f $F_LASTRUN ]; then
        LASTTIME=`cat $F_LASTRUN`
        if [ $[$CURTIME - $LASTTIME] -le $INTERVAL ]; then
            # complete run less than INTERVAL ago, exiting
            exit
        fi
    fi
    # no excuses, start new run now
    STATE=0
fi

start_maintenance
LOG start_maintenance exited with code $?

# done, now remember the state
echo $STATE > $F_STATE
echo $CURTIME > $F_LASTRUN

